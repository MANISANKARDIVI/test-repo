name: node-pipeline
on:
  push:
    branches:
      - production
    paths:
      - .github/workflows/node.yml
      - node/**

  pull_request:
    branches:
      - production
    paths:
      - .github/workflows/node.yml
      - node/**
jobs:
  dependency-install:
    uses: ./.github/workflows/caller-workflow.yaml
    with:
      node_version: "20.19.0"
      service_name: "./node"
    outputs:
      version: ${{ jobs.dependency.outputs.version }}  # ✅ Fix: Correctly reference reusable workflow output

  docker_build_push:
    runs-on: ubuntu-24.04
    needs: dependency-install
    env:
      VERSION: ${{ needs.dependency-install.outputs.version }}  # ✅ Fix: Correct reference
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push Docker image
        if: github.ref == 'refs/heads/production'
        run: |
          cd node
          docker build -t manisankardivi/node-test:$VERSION .
          docker push manisankardivi/node-test:$VERSION
          docker images

  k8s-manifest-files_update:
    runs-on: ubuntu-24.04
    needs: docker_build_push
    env:
      VERSION: ${{ needs.dependency-install.outputs.version }}  # ✅ Fix: Correct reference
    if: github.ref == 'refs/heads/production'
    steps:
      - name: Checkout Kubernetes repo
        run: |
          echo "Cloning Kubernetes repo..."
          git clone https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/MANISANKARDIVI/k8s-test.git
          cd k8s-test
          git pull
          git checkout production

      - name: Debug VERSION
        run: echo "Using version: $VERSION"

      - name: Update image version in deployment.yaml
        run: |
          cd k8s-test/node/production
          sed -i "s|image: ${{ secrets.DOCKER_USERNAME }}/node-test:.*|image: ${{ secrets.DOCKER_USERNAME }}/node-test:$VERSION|" deployment.yaml
          echo "Updated image version in deployment.yaml:"
          grep "image: ${{ secrets.DOCKER_USERNAME }}/node-test:" deployment.yaml

      - name: Commit changes if necessary
        run: |
          cd k8s-test
          git config --global user.email "manisankar.divi@gmail.com"
          git config --global user.name "Mani"
          git add .
          if git diff --cached --exit-code --quiet; then
            echo "No changes detected. Skipping commit and branch creation."
            echo "SKIP_BRANCH=true" >> $GITHUB_ENV
          else
            git commit -m "Updated deployment.yaml for [node] with version $VERSION | GitHub Actions Pipeline"
            echo "SKIP_BRANCH=false" >> $GITHUB_ENV
          fi

      - name: Create and push new branch if changes exist
        if: env.SKIP_BRANCH == 'false'
        run: |
          NEW_BRANCH="release/node-test-v$VERSION"
          cd k8s-test
          git checkout -b "$NEW_BRANCH"

          if git ls-remote --exit-code --heads origin "$NEW_BRANCH"; then
              echo "Branch $NEW_BRANCH already exists, pulling latest changes."
              git pull origin "$NEW_BRANCH" --no-rebase
          fi

          echo "Pushing branch $NEW_BRANCH..."
          git push origin "$NEW_BRANCH"
          echo "Branch $NEW_BRANCH created and pushed successfully."
