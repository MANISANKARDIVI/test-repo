name: Node Service Pipeline

on:
  push:
    branches:
      - production
    paths:
      - .github/workflows/node.yml
      - node/**

  pull_request:
    branches:
      - production
    paths:
      - .github/workflows/node.yml
      - node/**

jobs:
  dependency-install:
    uses: ./.github/workflows/dependency-install.yaml
    with:
      node_version: "20.19.0"
      service_name: "node"

  docker-build-push:
    needs: dependency-install
    uses: ./.github/workflows/docker-build-push.yaml
    with:
      service_directory: "node"
      image_name: "node-test"
      version: ${{ needs.dependency-install.outputs.version }}
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}

  k8s-manifest-files_update:
    needs: [dependency-install, docker-build-push]
    uses: ./.github/workflows/k8s-manifest.yaml
    with:
        service_name: "node"
        image_name: "node-test"
        version: ${{ needs.dependency-install.outputs.version }}
    secrets:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  
    # needs: [dependency-install, docker-build-push]
    # env:
    #   VERSION: ${{ needs.dependency-install.outputs.version }}
    # if: github.ref == 'refs/heads/production'

    # steps:
    #   - name: Checkout Kubernetes repo
    #     run: |
    #       echo "Cloning Kubernetes repo..."
    #       git clone https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/MANISANKARDIVI/k8s-test.git
    #       cd k8s-test
    #       git pull
    #       git checkout production
    #       cd node/production
    #       echo "Using version: $VERSION"
    #       echo "Updating image version in deployment.yaml..."
    #       sed -i "s|image: ${{ secrets.DOCKER_USERNAME }}/node-test:.*|image: ${{ secrets.DOCKER_USERNAME }}/node-test:$VERSION|" deployment.yaml
    #       grep "image: ${{ secrets.DOCKER_USERNAME }}/node-test:" deployment.yaml

    #   - name: Check for changes and commit if updated
    #     run: |
    #       cd k8s-test
    #       git config --global user.email "manisankar.divi@gmail.com"
    #       git config --global user.name "Mani"
    #       git add .
    #       if git diff --cached --exit-code --quiet; then
    #         echo "No changes detected in deployment.yaml. Skipping commit."
    #         echo "SKIP_BRANCH=true" >> $GITHUB_ENV
    #       else
    #         echo "Changes detected. Committing changes."
    #         git commit -m "Updated deployment.yaml for [node] with version $VERSION | GitHub Actions Pipeline"
    #         echo "SKIP_BRANCH=false" >> $GITHUB_ENV
    #       fi

    #   - name: Create and push new branch with version (if changes exist)
    #     if: env.SKIP_BRANCH == 'false'
    #     run: |
    #       NEW_BRANCH="release/node-test-v$VERSION"
    #       cd k8s-test
    #       git checkout -b "$NEW_BRANCH"

    #       if git ls-remote --exit-code --heads origin $NEW_BRANCH; then
    #           echo "Branch $NEW_BRANCH already exists. Pulling latest changes."
    #           git pull origin $NEW_BRANCH --no-rebase
    #       fi

    #       echo "Pushing branch $NEW_BRANCH to origin..."
    #       git push origin "$NEW_BRANCH"
    #       echo "Branch $NEW_BRANCH created and pushed successfully."
