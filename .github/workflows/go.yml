name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - dev
    paths:
      - '.github/workflows/go.yml'
      - 'go-project/**'

jobs:
  build_and_deploy:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.2'
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.64
          
      - name: Install dependencies
        run: |
          cd go-project
          go mod XXdownload
          golangci-lint run
          golangci-lint run ./...
          
      - name: Test with the Go CLI
        run: |
          cd go-project
          go test ./...

      # - name: Build the application
      #   run: |
      #     cd go-project
      #     mkdir -p dist
      #     go build -o dist/main ./...
          
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifact
          path: dist
          if-no-files-found: warn

      # Verifying Gitleaks
      - uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE}} # Only required for Organizations, not personal accounts..

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Read version from VERSION file
        id: read_version
        run: |
          # Debugging commands
          pwd  # Print current directory
          cd go-project
          ls -la
          if [ -f VERSION ]; then
            VERSION=$(cat VERSION | xargs)
            echo "VERSION=$VERSION" >> $GITHUB_ENV
          else
            echo "VERSION file not found in go-project!"
            exit 1
          fi
          cat VERSION

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Build and push Docker image
        run: |
          # Debugging commands
          pwd  # Print current directory
          ls -al  # List all files in the current directory
          ls -al go-project  # List all files in the go-project directory (if it exists)
          cd go-project
          ls 
          docker buildx build --load -t manisankardivi/new:${{ env.VERSION }} .
          docker images
          docker push manisankardivi/new:${{ env.VERSION }}
      # - name: Update Image Version and Push Changes
      #   run: |
          
      #     git clone https://x-access-token:${{ secrets.PERSONAL_ACCESS_TOKEN }}@github.com/manisankar-divi/k8s-repo.git
      #     cd k8s-repo
      
      #     # Update image in manifest.yaml
      #     sed -i "s|image: manisankardivi/new:.*|image: manisankardivi/new:${{ env.VERSION }}|" manifest.yaml
      
      #     # Verify changes
      #     git status
      #     git diff
      
      #     # Configure Git
      #     git config --global user.email "manisankar-divi@gmail.com"
      #     git config --global user.name "manisankar-divi"
      
      #     # Commit and push changes if thereâ€™s an update blqw blaw
      #     if git diff --exit-code --quiet; then
      #       echo "No changes to commit."
      #     else
      #       git add manifest.yaml
      #       git commit -m "Updated manifest.yaml with version ${{ env.VERSION }} | GitHub Actions Pipeline"
      #       git push origin main
      #     fi
