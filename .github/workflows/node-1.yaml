name: Node-1 Service Pipeline

on:
  push:
    branches:
      - production
    paths:
      - .github/workflows/node-1.yaml
      - node-1/**

  pull_request:
    branches:
      - production
    paths:
      - .github/workflows/node-1.yaml
      - node-1/**

jobs:
  dependency-install:
    uses: ./.github/workflows/caller-workflow.yaml
    with:
      node_version: "v23.10.0"
      service_name: "node-1"

  docker-build-push:
    needs: dependency-install
    uses: ./.github/workflows/docker-build-push.yaml
    with:
      service_directory: "node-1"
      image_name: "node-1-test"
      version: ${{ needs.dependency-install.outputs.version }}
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}

  k8s-manifest-files_update:
    runs-on: ubuntu-24.04
    needs: [dependency-install, docker-build-push]
    env:
      VERSION: ${{ needs.dependency-install.outputs.version }}
    if: github.ref == 'refs/heads/production'

    steps:
      - name: Checkout Kubernetes repo
        run: |
          echo "Cloning Kubernetes repo..."
          git clone https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/MANISANKARDIVI/k8s-test.git
          cd k8s-test
          git pull
          git checkout production
          git branch
          cd node-1/production
          pwd
          ls -la
          echo "Using version: $VERSION"
          echo "version: $VERSION"
          echo "Updating image version in deployment.yaml..."
          sed -i "s|image: ${{ secrets.DOCKER_USERNAME }}/node-test:.*|image: ${{ secrets.DOCKER_USERNAME }}/node-1-test:$VERSION|" deployment.yaml
          grep "image: ${{ secrets.DOCKER_USERNAME }}/node-1-test:" deployment.yaml

      - name: Check for changes and commit if updated
        run: |
          cd k8s-test
          git config --global user.email "manisankar.divi@gmail.com"
          git config --global user.name "Mani"
          git add .
          if git diff --cached --exit-code --quiet; then
            echo "No changes detected in deployment.yaml. Skipping commit."
            echo "SKIP_BRANCH=true" >> $GITHUB_ENV
          else
            echo "Changes detected. Committing changes."
            git commit -m "Updated deployment.yaml for [node] with version $VERSION | GitHub Actions Pipeline"
            echo "SKIP_BRANCH=false" >> $GITHUB_ENV
          fi

      - name: Create and push new branch with version (if changes exist)
        if: env.SKIP_BRANCH == 'false'
        run: |
          cd k8s-test
          NEW_BRANCH="release/node-1-test-v$VERSION"
          git checkout -b "$NEW_BRANCH"

          if git ls-remote --exit-code --heads origin $NEW_BRANCH; then
              echo "Branch $NEW_BRANCH already exists. Pulling latest changes."
              git pull origin $NEW_BRANCH --no-rebase
          fi

          echo "Pushing branch $NEW_BRANCH to origin..."
          git push origin "$NEW_BRANCH"
          echo "Branch $NEW_BRANCH created and pushed successfully."
